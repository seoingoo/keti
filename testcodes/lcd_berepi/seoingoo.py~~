import sys
sys.path.append("./lib")
from lcd import *

def main():
    lcd_init()
    

    ## LCD Clear ##
#    lcd_string("disappear", LCD_LINE_1, 2)
#    time.sleep(0.5)
#    lcd_byte(0x01, LCD_CMD)
#    time.sleep(0.5)
    

    ## Cursor Home ##
#    lcd_string("CMD test", LCD_LINE_1, 1)
#    lcd_string("CMD test", LCD_LINE_2, 2)
#    time.sleep(0.5)
#    lcd_byte(0x02, LCD_CMD)
#    lcd_byte(0b1000001, LCD_CHR)
#    time.sleep(0.5)
    

#    lcd_clear()
#    lcd_byte(0x02, LCD_CMD)


    ## Cursor Position(Decrement/Increment) and Display Shift ##
    # 1. Cursor Position Decrement and Display Shift On
#    lcd_byte(0x05, LCD_CMD)
#    lcd_byte(0b1000001, LCD_CHR)
#    time.sleep(0.5)
#    lcd_byte(0b1000010, LCD_CHR)
#    time.sleep(0.5)
#    lcd_byte(0b1000011, LCD_CHR)
#    time.sleep(1)

    # 2. Cursor Position Increment and Display Shift Off
#    lcd_byte(0x06, LCD_CMD)
#    time.sleep(0.5)
#    lcd_byte(0b1000001, LCD_CHR)
#    time.sleep(0.5)
#    lcd_byte(0b1000010, LCD_CHR)
#    time.sleep(0.5)
#    lcd_byte(0b1000011, LCD_CHR)
#    time.sleep(0.5)
#    lcd_byte(0b1000100, LCD_CHR)
#    time.sleep(0.5)
#    lcd_byte(0b1000101, LCD_CHR)
#    time.sleep(0.5)
#    lcd_byte(0b1000110, LCD_CHR)
#    time.sleep(0.5)
#    lcd_byte(0b1000111, LCD_CHR)
#    time.sleep(0.5)


    ## Display On/Off and Cursor On/Off and Cursor Blink On/Off ##
    # All On
#    lcd_byte(0x0F, LCD_CMD)
#    time.sleep(1)

    # 1. Only Display Off
#    lcd_byte(0x0B, LCD_CMD)
#    time.sleep(1)

#    # 2. Cursor Blink Off
#    lcd_byte(0x0E, LCD_CMD)
#    time.sleep(1)

    # 3. Cursor Off
#    lcd_byte(0x0D, LCD_CMD)
#    time.sleep(1)

    # 4. Cursor Blink and Cursor Off
#    lcd_byte(0x0C, LCD_CMD)
#    time.sleep(1)

    
#    lcd_clear()


    ## Cursor Move or Display Shift and Shift Direction
    # 1. Cursor Move
    lcd_byte(0x10, LCD_CMD)
    lcd_byte(0b1000001, LCD_CHR)
    time.sleep(0.5)
    lcd_byte(0b1000010, LCD_CHR)
    time.sleep(0.5)
    lcd_byte(0b1000011, LCD_CHR)
    time.sleep(0.5)
    lcd_byte(0b1000100, LCD_CHR)
    time.sleep(1)

    # 2. Display Shift and Shift Left
    lcd_byte(0x1C, LCD_CMD)
    lcd_byte(0b1000001, LCD_CHR)
    time.sleep(0.5)
    lcd_byte(0x1C, LCD_CMD)
    lcd_byte(0b1000010, LCD_CHR)
    lcd_byte(0x1C, LCD_CMD)
    time.sleep(0.5)
    lcd_byte(0b1000011, LCD_CHR)
    time.sleep(0.5)
    lcd_byte(0b1000100, LCD_CHR)
    time.sleep(1)

if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        pass
    finally:
        lcd_byte(0x01, LCD_CMD)
        time.sleep(1)
        GPIO.cleanup()
